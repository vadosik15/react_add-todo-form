{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","initialTodos","App","useState","setTodos","setTitle","selectedUserId","setSelectedUserId","errorUser","setErrorUser","errorTitle","setErrorTitle","action","method","onSubmit","event","preventDefault","trim","replace","newTodo","Math","max","prevTodo","htmlFor","type","value","onChange","target","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6174d9d0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/types';\nimport '../../Reset.scss';\n\nexport type UserInfoProps = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport './TodoInfo.scss';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/types';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user ? <UserInfo user={user} />\n        : <div>No user found</div>}\n\n    </article>\n  );\n};\n","import { Todo } from '../../types/types';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype TodoListProps = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC <TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n        data-id={todo.id}\n      />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { User, Todo } from './types/types';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst initialTodos = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(initialTodos);\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [errorUser, setErrorUser] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(false);\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n    setErrorTitle(false);\n  };\n\n  const resetFields = () => {\n    setTitle('');\n\n    setErrorUser(false);\n    setSelectedUserId(0);\n  };\n\n  const handleUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setErrorUser(false);\n    setSelectedUserId(+value);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setErrorTitle(true);\n    }\n\n    if (!selectedUserId) {\n      setErrorUser(true);\n    }\n\n    setTitle(title.replace(/[^A-Za-z\\s\\d\\u0400-\\u04FF]/g, ''));\n\n    if (title.trim() && selectedUserId) {\n      const newTodo: Todo = {\n        id: Math.max(...todos.map((todo) => todo.id)) + 1,\n        userId: selectedUserId,\n        title,\n        completed: false,\n        user: getUserById(selectedUserId),\n      };\n\n      setTodos((prevTodo => [...prevTodo, newTodo]));\n\n      resetFields();\n    }\n  };\n\n  return (\n    <div className=\"containerForApp\">\n      <div className=\"App\">\n        <h1 className=\"title\">\n          Add todo form\n        </h1>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={handleSubmit}\n          className=\"formUsers\"\n        >\n          <div className=\"field\">\n            <label\n              htmlFor=\"titleInput\"\n            >\n              Title\n              <input\n                type=\"text\"\n                className=\"field-form\"\n                data-cy=\"titleInput\"\n                value={title}\n                onChange={handleChangeTitle}\n                placeholder=\"Enter a title\"\n              />\n            </label>\n\n            {errorTitle && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <label\n              htmlFor=\"userSelect\"\n              className=\"labelUser\"\n            >\n              User\n              <select\n                data-cy=\"userSelect\"\n                id=\"userSelect\"\n                placeholder=\"Choose a user\"\n                className=\"selectorUsers\"\n                value={selectedUserId}\n                onChange={handleUserId}\n              >\n                <option value=\"0\">\n                  Choose a user\n                </option>\n\n                {usersFromServer.map(({ name, id }) => (\n                  <option\n                    value={id}\n                    key={id}\n                  >\n                    {name}\n                  </option>\n                ))}\n              </select>\n            </label>\n\n            {errorUser && (\n              <span className=\"error\">\n                Please choose a user\n              </span>\n            )}\n          </div>\n\n          <button\n            type=\"submit\"\n            data-cy=\"submitButton\"\n            className=\"submit-button\"\n          >\n            Add\n          </button>\n        </form>\n\n        <TodoList todos={todos} />\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}